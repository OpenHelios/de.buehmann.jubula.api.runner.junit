plugins {
	id 'com.jfrog.bintray' version '1.7.3'
}

apply plugin: 'java'
// avoid wrong runtime dependencies
apply plugin: 'java-library'
// publishing to maven repository
apply plugin: 'maven-publish'
apply plugin: 'maven'
apply plugin: 'eclipse'

group = 'de.buehmann.tools'
version = '4.1.0'

def Properties properties = new Properties()
properties.load(new FileInputStream(project.file('local.properties')))

repositories {
	jcenter()
	maven {
		url 'https://repo.eclipse.org/content/repositories/jubula-snapshots/'
	}
/*
	maven {
		url file('../repo')
	}
*/
}

dependencies {
	compile 'de.buehmann.tools:de.buehmann.jubula.api.runner:4.1.0'
	compile 'junit:junit:4.12'
}

test {
	testLogging {
		events 'passed', 'skipped', 'failed'
		exceptionFormat = 'full'
	}
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allJava
	classifier 'sources'
}

bintray {
	user = properties.getProperty('bintray.user')
	key = properties.getProperty('bintray.key')
	publications = ['MyPublication']
	// activate real run with false
	dryRun = false
	publish = true // automatically publish version after upload
	pkg {
		repo = 'maven'
		name = project.name
		userOrg = 'raimar'
		licenses = ['EPL-1.0']
		websiteUrl = project.getProperty('websiteUrl')
		issueTrackerUrl = project.getProperty('websiteUrl') + '/issues'
		vcsUrl = project.getProperty('websiteUrl') + '.git'
		labels = ['junit', 'jubula', 'java', 'api', 'runner']
		publicDownloadNumbers = true
		version {
			name = project.version
			desc = 'Jubula Java API runner ' + project.version
			released  = new Date()
			// vcsTag = project.version
			// attributes = ['library': 'de.buehmann.tools:de.buehmann.jubula.api.runnner']
		}
	}
}

publishing {
	publications {
		MyPublication(MavenPublication) {
			from components.java
			groupId project.group
			artifactId project.name
			version project.version
			artifact sourcesJar
		}
	}
}

// repository for local tests
uploadArchives {
	repositories {
		mavenDeployer {
			repository(url: uri('../repo'))
		}
	}
}

// publish: gradle bintrayUpload
// @see https://github.com/bintray/gradle-bintray-plugin#readme
